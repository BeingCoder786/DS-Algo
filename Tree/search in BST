    fun searchBST(root: TreeNode?, `val`: Int): TreeNode? {
   // Base case: if the root is null or the root's value is the target value
    if (root == null || root.`val` == `val`) {
        return root
    }

    // If the value to search for is less than the root's value, search in the left subtree
    return if (`val` < root.`val`) {
        searchBST(root.left, `val`)
    } else {
        // Otherwise, search in the right subtree
        searchBST(root.right, `val`)
    }
    }

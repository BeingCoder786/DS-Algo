https://leetcode.com/problems/longest-palindrome/

class Solution {
fun longestPalindrome(s: String): Int {
    val a = s.toCharArray()

    val m = HashMap<Char, Int>()

for (i in 0 until a.size) {
  //  if (m.containsKey(a[i])) {
  //      m[a[i]] = m[a[i]]!! + 1
  ///  } else {
  //      m[a[i]] = 1
  //  }
     m[a[i]] = m.getOrDefault(a[i],0)+1
}
 
     

    var sum = 0
    var count = 0

    for (key in m.keys) {
        if (m[key]!! % 2 == 0) {
            sum += m[key]!!
        } else {
            sum += m[key]!!
            sum -= 1
            count = 1
        }
    }

    return if (count == 1) sum + 1 else sum
}

}

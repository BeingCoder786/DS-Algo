https://leetcode.com/problems/sort-list/

/**
 * Example:
 * var li = ListNode(5)
 * var v = li.`val`
 * Definition for singly-linked list.
 * class ListNode(var `val`: Int) {
 *     var next: ListNode? = null
 * }
 */
class Solution {
    fun sortList(head: ListNode?): ListNode? {
        
    if (head == null) return null

    val arr = mutableListOf<Int>()

    // Temporary pointer to traverse the linked list
    var temp: ListNode? = head

    // Traverse the linked list and store node values in the list
    while (temp != null) {
        arr.add(temp.`val`)
        temp = temp.next
    }

    // Sort the list containing node values
    arr.sort()

    // Reassign sorted values to the linked list nodes
    temp = head
    for (i in arr.indices) {
        // Update the node's value with the sorted values
        temp?.`val` = arr[i]
        // Move to the next node
        temp = temp?.next
    }

    // Return the head of the sorted linked list
    return head

    }
}

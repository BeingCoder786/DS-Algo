https://leetcode.com/problems/merge-two-sorted-lists/

/**
 * Example:
 * var li = ListNode(5)
 * var v = li.`val`
 * Definition for singly-linked list.
 * class ListNode(var `val`: Int) {
 *     var next: ListNode? = null
 * }
 */


class Solution {
    fun mergeTwoLists(list1: ListNode?, list2: ListNode?): ListNode? {
        // Base cases
        var l1 = list1
         var l2 = list2
        if (l1 == null) return l2
        if (l2 == null) return l1

        // Variable to keep track of the merged list
        var sort: ListNode?
        var head: ListNode?

        // Initialize the head of the sorted list
        if (l1.`val` <= l2.`val`) {
            sort = l1
            head = sort
            l1 = l1.next
        } else {
            sort = l2
            head = sort
            l2 = l2.next
        }

        // Traverse and merge both lists
        while (l1 != null && l2 != null) {
            if (l1.`val` <= l2.`val`) {
                sort?.next = l1
                sort = l1
                l1 = l1.next
            } else {
                sort?.next = l2
                sort = l2
                l2 = l2.next
            }
        }

        // Append remaining nodes of the non-empty list
        if (l1 != null) {
            sort?.next = l1
        }
        if (l2 != null) {
            sort?.next = l2
        }

        return head
    }
}

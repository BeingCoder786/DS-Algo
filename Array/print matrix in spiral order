class Solution {
    fun spiralOrder(matrix: Array<IntArray>): List<Int> {

       val result = mutableListOf<Int>()

    if (matrix.isEmpty() || matrix[0].isEmpty()) return result

    var top = 0
    var bottom = matrix.size - 1 //row
    var left = 0
    var right = matrix[0].size - 1 //column

    while (top <= bottom && left <= right) {
        // Traverse from left to right along the top row
        for (i in left..right) {
            result.add(matrix[top][i])
        }
        top++

        // Traverse from top to bottom along the right column
        for (i in top..bottom) {
            result.add(matrix[i][right])
        }
        right--

        // Traverse from right to left along the bottom row, if any rows remain
        if (top <= bottom) {
            for (i in right downTo left) {
                result.add(matrix[bottom][i])
            }
            bottom--
        }

        // Traverse from bottom to top along the left column, if any columns remain
        if (left <= right) {
            for (i in bottom downTo top) {
                result.add(matrix[i][left])
            }
            left++
        }
    }

    return result
    }
}
